from commands.db import register_users, getperevod, getidname, getonlibalance, getlimitdb, getstatus
from commands.main import geturl
from commands.main import win_luser


async def get_limit_cmd(status):
    if status == 1:
        limit = 300000000000000
    elif status == 2:
        limit = 750000000000000
    elif status == 3:
        limit = 1000000000000000
    elif status == 4:
        limit = 30000000000000000
    else:
        limit = 150000000000000
    return limit

async def dat_cmd(message):
    await register_users(message)
    user_id = message.from_user.id
    user_name = await getidname(user_id)
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    per = await getlimitdb(message)
    url = await geturl(user_id, user_name)
    status = await getstatus(user_id)
    limit = await get_limit_cmd(status)
    try:
        reply_user_id = message.reply_to_message.from_user.id
        reply_user_name = await getidname(reply_user_id)
        url2 = await geturl(reply_user_id, reply_user_name)
    except:
        await message.reply(f'{user_name}, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {rloser}')
        return

    try:
        su = message.text.split()[1]
        su2 = (su).replace('–∫', '000')
        su3 = (su2).replace('–º', '000000')
        su4 = (su3).replace('.', '')
        su5 = float(su4)
        perevod = int(su5)
        perevod2 = '{:,}'.format(perevod).replace(',', '.')
    except:
        await message.reply(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∏–≥—Ä–æ–∫—É {rloser}')
        return

    if per + perevod > limit:
        await message.reply(f'{url}, –≤—ã —É–∂–µ –∏—Å—á–µ—Ä–ø–∞–ª–∏ —Å–≤–æ–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏ –¥–µ–Ω–µ–≥')
        return

    if perevod > 0:
        if balance >= perevod:
            await message.answer(f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {perevod2}$ –∏–≥—Ä–æ–∫—É {url2} {rwin}', parse_mode='html')
            await getperevod(message, perevod, user_id, reply_user_id)
        else:
            await message.reply(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {rloser}', parse_mode='html')

    if perevod <= 0:
        await message.reply(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫—É {rloser}', parse_mode='html')


async def limit_cmd(message):
    await register_users(message)
    user_id = message.from_user.id
    user_name = await getidname(user_id)
    per = await getlimitdb(message)
    url = await geturl(user_id, user_name)
    status = await getstatus(user_id)
    limit = await get_limit_cmd(status)
    ost = limit - per
    youlimit = '{:,}'.format(limit).replace(',', '.')
    ost = '{:,}'.format(ost).replace(',', '.')
    per2 = '{:,}'.format(per).replace(',', '.')
    await message.reply(f'''{url}, –∑–¥–µ—Å—å –≤–∞—à –ª–∏–º–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {youlimit}$
üí´ –í—ã —É–∂–µ –ø–µ—Ä–µ–¥–∞–ª–∏: {per2}$
üöÄ –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å: {ost}$ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏!''', parse_mode='html')
