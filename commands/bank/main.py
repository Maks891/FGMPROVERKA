from datetime import datetime, timedelta
from commands.db import register_users, getname, getads, getonlibalance, getstatus
from commands.bank.db import *
from commands.main import geturl
from commands.main import win_luser
from commands.assets.transform import transform


async def bank_pc(status):
    if status == 0:
        p = 6
        c = 5
        st = "–û–±—ã—á–Ω—ã–π"
    elif status == 1:
        p = 8
        c = 4.5
        st = "Standart VIP"
    elif status == 2:
        p = 10
        c = 3.5
        st = "Gold VIP"
    elif status == 3:
        p = 12
        c = 3
        st = "Platinum VIP"
    elif status == 4:
        p = 15
        c = 2.5
        st = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    return p, c, st

async def bank_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    ads = await getads(message)
    status = await getstatus(user_id)
    p, c, st = await bank_pc(status)
    depozit, timedepozit, bank = await getbankdb(message)
    timedepozit = datetime.strptime(timedepozit, '%Y-%m-%d %H:%M:%S.%f')
    timedepozit = timedepozit + timedelta(days=3)
    timedepozit = timedepozit.strftime('%Y-%m-%d –≤ %H:%M:%S')

    if depozit == 0:
        timedepozit = '–ù–µ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞'

    depozit = '{:,}'.format(depozit).replace(',', '.')
    bank = '{:,}'.format(bank).replace(',', '.')

    await message.answer(f'''{url}, –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç:
üë´ –í–ª–∞–¥–µ–ª–µ—Ü: {user_name}
üí∞ –î–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫–µ: {bank}$
üíé –°—Ç–∞—Ç—É—Å: {st}
   „ÄΩ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–¥ –¥–µ–ø–æ–∑–∏—Ç: {p}%
   üí± –ö–æ–º–∏—Å—Å–∏—è –±–∞–Ω–∫–∞: {c}%
   üíµ –ü–æ–¥ –¥–µ–ø–æ–∑–∏—Ç–æ–º: {depozit}$
   ‚è≥ –ú–æ–∂–Ω–æ —Å–Ω—è—Ç—å: {timedepozit}

{ads}''', parse_mode='html', disable_web_page_preview=True)


async def putbank(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    result = await win_luser()
    rwin, rloser = result

    try:
        summ = int(message.text.split()[2])
    except:
        return

    summ2 = '{:,}'.format(summ).replace(',', '.')

    if summ <= balance:
        if summ > 0:
            await putbank_db(summ, user_id)
            await message.answer(f'{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç {summ2}$ {rwin}', parse_mode='html')
        else:
            await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥ {rloser}',
                                 parse_mode='html')
    else:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {rloser}', parse_mode='html')


async def takeoffbank(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    balance = await getbakbalance_db(message)
    url = await geturl(user_id, user_name)
    result = await win_luser()
    rwin, rloser = result

    try:
        summ = int(message.text.split()[2])
    except:
        try:
            if message.text.split()[2] in ['–≤—Å–µ', '–≤—Å—ë']:
                summ = balance
        except:
            return

    summ2 = '{:,}'.format(summ).replace(',', '.')

    if summ <= balance:
        if summ > 0:
            await takeoffbank_db(summ, user_id)
            await message.answer(f'{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ {summ2}$ {rwin}', parse_mode='html')
        else:
            await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥ {rloser}',
                                 parse_mode='html')
    else:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞ –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å {rloser}', parse_mode='html')


async def dep_comsa(status):
    if status == 0:
        c = 0.05
        p = 5
    elif status == 1:
        c = 0.045
        p = 4.5
    elif status == 2:
        c = 0.035
        p = 3.5
    elif status == 3:
        c = 0.03
        p = 3
    elif status == 4:
        c = 0.025
        p = 2.5
    return c, p


async def pudepozit(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    balance = await getonlibalance(message)
    depozitb = await getdepbakance_db(message)
    url = await geturl(user_id, user_name)
    result = await win_luser()
    rwin, rloser = result

    try:
        summ = int(message.text.split()[2])
    except:
        return

    if summ < 1000:
        await message.answer(f'{url}, –≤–∞—à –≤–∑–Ω–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1000$ {rloser}', parse_mode='html')
        return

    if depozitb != 0:
        await message.answer(f'{url}, —É –≤–∞—Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –¥–µ–ø–æ–∑–∏—Ç. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ {rloser}', parse_mode='html')
        return

    comsa = summ * 0.15
    csumm = summ - comsa
    comsa = int(comsa)
    csumm = int(csumm)

    summ2 = '{:,}'.format(csumm).replace(',', '.')
    comsa2 = '{:,}'.format(comsa).replace(',', '.')

    if summ <= balance:
        dt = datetime.now()
        await putdep_db(csumm, user_id, dt, summ)
        await message.answer(f'{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç–Ω—ã–π —Å—á—ë—Ç {summ2}$ –ø–æ–¥ 6% {rwin}.\n\n–í—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ '
                             f'–∫–æ–º–∏—Å—Å–∏—é –≤ —Ä–∞–∑–º–µ—Ä–µ {comsa2}$ (1.5%) –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —É—Å–ª—É–≥.', parse_mode='html')
    else:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {rloser}', parse_mode='html')


async def takeoffdepozit(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    balance, timedepozit, bank = await getbankdb(message)
    timedepozit = datetime.strptime(timedepozit, '%Y-%m-%d %H:%M:%S.%f')
    timedepozit = timedepozit + timedelta(days=3)
    dt = datetime.now()
    url = await geturl(user_id, user_name)
    result = await win_luser()
    rwin, rloser = result

    status = await getstatus(user_id)
    c, p = await dep_comsa(status)

    try:
        summ = int(message.text.split()[2])
    except:
        try:
            if message.text.split()[2] in ['–≤—Å–µ', '–≤—Å—ë']:
                summ = balance
        except:
            return

    if timedepozit > dt:
        await message.answer(f'{url}, —É –≤–∞—Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –¥–µ–ø–æ–∑–∏—Ç. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å –Ω–µ–≥–æ –¥–µ–Ω—å–≥–∏ —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ {rloser}',
                             parse_mode='html')
        return

    if summ > balance:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å –¥–µ–ø–æ–∑–∏—Ç–∞ –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å {rloser}',
                             parse_mode='html')
        return

    if summ <= 0:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å –¥–µ–ø–æ–∑–∏—Ç–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥ {rloser}',
                             parse_mode='html')
        return

    if summ < 100:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –º–µ–Ω—å—à–µ 100$ {rloser}', parse_mode='html')
        return

    if summ < balance:
        ost = balance - summ
        await getdepost(ost, user_id)

    comsa = summ * int(c)
    csumm = summ - comsa
    comsa = int(comsa)
    csumm = int(csumm)

    summ2 = '{:,}'.format(csumm).replace(',', '.')
    comsa2 = '{:,}'.format(comsa).replace(',', '.')

    await sndep_db(csumm, user_id)
    await message.answer(f'''{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞ {summ2}$ üòÅ

–£—á—Ç–∏—Ç–µ, —Å–Ω—è–≤ –¥–µ–Ω—å–≥–∏ –≤—ã –∑–∞–∫—Ä—ã–ª–∏ —Å–≤–æ–π –¥–µ–ø–æ–∑–∏—Ç–Ω—ã–π —Å—á—ë—Ç. –ß—Ç–æ–±—ã –µ–≥–æ –≤–Ω–æ–≤—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ –ø–æ–¥ –¥–µ–ø–æ–∑–∏—Ç –ª—é–±—É—é —Å—É–º–º—É.

–í—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –Ω–∞–ª–æ–≥ –≤ —Ä–∞–∑–º–µ—Ä–µ {comsa2}$ ({p}%) –∑–∞ —Å–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥ —Å –¥–µ–ø–æ–∑–∏—Ç–∞.''', parse_mode='html')
