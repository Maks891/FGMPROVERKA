from _decimal import Decimal

from commands.earnings.farm.db import *
from commands.db import register_users, getname, getonlibalance, getidname
from commands.main import geturl
from commands.main import win_luser
from commands.games.gdb import *


async def darts_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)

    try:
        su = message.text.split()[1]
        su2 = (su).replace('–∫', '000')
        su3 = (su2).replace('–º', '000000')
        su4 = (su3).replace('.', '')
        su5 = float(su4)
        summ = int(su5)
    except:
        await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã {rloser}', parse_mode='html')
        return
    if balance >= summ:
        if summ >= 10:
            gt = await gametime(user_id)
            if gt == 1:
                await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}', parse_mode='html')  # {round(left1)}
                return
            rx1 = await message.reply_dice(emoji="üéØ")
            rx = rx1.dice.value

            if int(rx) == 5:
                await message.answer(f'{url}, –≤—ã –±—ã–ª–∏ –Ω–∞ –≤–æ–ª–æ—Å–∫–µ –æ—Ç –ø–æ–±–µ–¥—ã! üéØ\nüí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏! (—Ö1)', parse_mode='html')
            elif int(rx) == 6:
                c = Decimal(summ * 2)
                c2 = round(c)
                c2 = '{:,}'.format(c2)
                await gX2(balance, summ, user_id)
                await message.answer(f'–ò–≥—Ä–æ–∫, –≤ —è–±–ª–æ—á–∫–æ! üéØ\nüí∞ –í–∞—à –ø—Ä–∏–∑: {c2}$!',parse_mode='html')
            else:
                await gX0(balance, summ, user_id)
                await message.answer(f'{rloser} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –í–∞—à–∞ –ø–æ–±–µ–¥–∞ —É—Å–∫–æ–ª—å–∑–Ω—É–ª–∞ –æ—Ç –í–∞—Å! üéØÔ∏è', parse_mode='html')

        else:
            await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}', parse_mode='html')
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ {rloser}', parse_mode='html')

async def kybik_game_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)

    try:
        ch1 = message.text.split()[1]
        ch = int(ch1)
        su = message.text.split()[2]
        su2 = (su).replace('–∫', '000')
        su3 = (su2).replace('–º', '000000')
        su4 = (su3).replace('.', '')
        su5 = float(su4)
        summ = int(su5)
        summ2 = '{:,}'.format(summ).replace(',', '.')
    except:
        await message.answer(f'{rloser} | –û—à–∏–±–∫–∞. –í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã.')
        return
    if ch >= 1 and ch <= 6:
        if balance >= summ:
            if summ >= 10:
                gt = await gametime(user_id)
                if gt == 1:
                    await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}', parse_mode='html')  # {round(left1)}
                    return
                rx1 = await message.reply_dice(emoji="üé≤")
                rx = rx1.dice.value

                if int(rx) == ch:
                    c = Decimal(summ * 4)
                    c2 = round(c)
                    c2 = '{:,}'.format(c2).replace(',', '.')
                    await gX4(balance, summ, user_id)
                    await message.answer(f'{rwin} | –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª - {c2}$', parse_mode='html')
                    return
                else:
                    await gX0(balance, summ, user_id)
                    await message.answer(f'{rwin} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ! üé≤', parse_mode='html')
                    return

            else:
                await message.answer(f'{rloser} | –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10.', parse_mode='html')
        else:
            await message.answer(f'{rloser} | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.', parse_mode='html')
    else:
        if ch < 1:
            t = '–º–µ–Ω—å—à–µ 0'
        else:
            t = '–±–æ–ª—å—à–µ 6'
        await message.answer(f'{rloser} | –û—à–∏–±–∫–∞. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —á–∏—Å–ª–æ {t}.', parse_mode='html')

async def basketbol_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    user_id = message.from_user.id
    try:
        su = message.text.split()[1]
        su2 = (su).replace('–∫', '000')
        su3 = (su2).replace('–º', '000000')
        su4 = (su3).replace('.', '')
        su5 = float(su4)
        summ = int(su5)
    except:
        await message.reply(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã üòû')
        return
    if balance < summ:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ üòï')
        return
    if summ >= 10:
        rx1 = await message.reply_dice(emoji="üèÄ")
        rx = rx1.dice.value

        if int(rx) == 5:
            c = Decimal(summ * 2)
            c2 = round(c)
            c2 = '{:,}'.format(c2)
            await gX2(balance, summ, user_id)
            await message.answer(f'{url}, –º—è—á –≤ –∫–æ–ª—å—Ü–µ, —É—Ä–∞! üèÄ\nüí∞ –í–∞—à –ø—Ä–∏–∑: {c2}$!', parse_mode='html')

        elif int(rx) == 4:
            await message.answer(f'{url}, –±—Ä–æ—Å–æ–∫ –æ–∫–∞–∑–∞–ª—Å—è –Ω–∞ –≥—Ä–∞–Ω–∏ —Ñ–æ–ª–∞! üèÄ\nüí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏! (—Ö1)', parse_mode='html')
        else:
            await gX0(balance, summ, user_id)
            await message.answer(f'{rwin} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–æ–ª—å—Ü–æ! üèÄ', parse_mode='html')
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}', parse_mode='html')

async def bowling_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    user_id = message.from_user.id
    try:
        su = message.text.split()[1]
        su2 = (su).replace('–∫', '000')
        su3 = (su2).replace('–º', '000000')
        su4 = (su3).replace('.', '')
        su5 = float(su4)
        summ = int(su5)
    except:
        await message.reply(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã üòû')
        return
    if balance < summ:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ üòï')
        return
    if summ >= 10:
        rx1 = await message.reply_dice(emoji="üé≥Ô∏è")
        rx = rx1.dice.value

        if int(rx) == 6:
            c = Decimal(summ * 2)
            c2 = round(c)
            c2 = '{:,}'.format(c2)
            await gX2(balance, summ, user_id)
            await message.answer(f'{url}, —Å—Ç—Ä–∞–π–∫! –ü–æ–ª–Ω–∞—è –ø–æ–±–µ–¥–∞! üé≥Ô∏è\nüí∞ –í–∞—à –ø—Ä–∏–∑: {c2}$!', parse_mode='html')

        elif int(rx) == 5:
            await message.answer(f'{url}, —Ç–∞–∫ –±–ª–∏–∑–∫–æ –∫ –ø–æ–±–µ–¥–µ! üé≥\nüí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏! (—Ö1)', parse_mode='html')
        else:
            await gX0(balance, summ, user_id)
            await message.answer(f'{rwin} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–∏–º–æ –≤—Å–µ—Ö –∫–µ–≥–ª–µ–π! üé≥', parse_mode='html')
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}', parse_mode='html')
