from commands.db import register_users, getname, getonlibalance, getidname, getads
from commands.main import geturl
from commands.main import win_luser
from commands.ore.db import *
import random



async def energy_cmd(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    i = await getenergy(message)
    await message.answer(f'''{url}, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è {i} ‚ö°''', parse_mode='html', disable_web_page_preview=True)


async def mine_cmd(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    await message.answer(f'''{url}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –≤–∞—à—É —à–∞—Ö—Ç—É! üèûÔ∏è

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏, –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ—é —ç–Ω–µ—Ä–≥–∏—é ‚ö°.

‚ú® –î–ª—è –¥–æ–±—ã—á–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:- –∫–æ–ø–∞—Ç—å –∂–µ–ª–µ–∑–æ
- –∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ
- –∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã
- –∫–æ–ø–∞—Ç—å –∞–º–µ—Ç–∏—Å—Ç—ã
- –∫–æ–ø–∞—Ç—å –∞–∫–≤–∞–º–∞—Ä–∏–Ω
- –∫–æ–ø–∞—Ç—å –∏–∑—É–º—Ä—É–¥—ã
- –∫–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é
- –∫–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É
- –∫–æ–ø–∞—Ç—å –Ω–∏–∫–µ–ª—å
- –∫–æ–ø–∞—Ç—å —Ç–∏—Ç–∞–Ω
- –∫–æ–ø–∞—Ç—å –∫–æ–±–∞–ª—å—Ç
- –∫–æ–ø–∞—Ç—å —ç–∫—Ç–æ–ø–ª–∞–∑–º—É
<b>¬´–°—Ç–∞—Ç—É—Å—ã¬ª —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–∞–¥–∞–µ–º–æ–π —Ä—É–¥—ã –∏ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –æ–ø—ã—Ç–∞.</b>

üõí –î–ª—è –ø—Ä–æ–¥–∞–∂–∏ —Ä–µ—Å—É—Ä—Å–æ–≤:
- –ø—Ä–æ–¥–∞—Ç—å –∂–µ–ª–µ–∑–æ
- –ø—Ä–æ–¥–∞—Ç—å –∑–æ–ª–æ—Ç–æ
- –ø—Ä–æ–¥–∞—Ç—å –∞–ª–º–∞–∑—ã
- –ø—Ä–æ–¥–∞—Ç—å –∞–º–µ—Ç–∏—Å—Ç—ã
- –ø—Ä–æ–¥–∞—Ç—å –∞–∫–≤–∞–º–∞—Ä–∏–Ω
- –ø—Ä–æ–¥–∞—Ç—å –∏–∑—É–º—Ä—É–¥—ã
- –ø—Ä–æ–¥–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é
- –ø—Ä–æ–¥–∞—Ç—å –ø–ª–∞–∑–º—É
- –ø—Ä–æ–¥–∞—Ç—å –Ω–∏–∫–µ–ª—å
- –ø—Ä–æ–¥–∞—Ç—å —Ç–∏—Ç–∞–Ω
- –ø—Ä–æ–¥–∞—Ç—å –∫–æ–±–∞–ª—å—Ç
- –ø—Ä–æ–¥–∞—Ç—å —ç–∫—Ç–æ–ø–ª–∞–∑–º—É
- –ø—Ä–æ–¥–∞—Ç—å –ø–∞–ª–ª–∞–¥–∏–π

üìä –î–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:
- –ú–æ—è —à–∞—Ö—Ç–∞''', parse_mode='html')


async def kursrud_cmd(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    await message.answer(f'''{url}, –∫—É—Ä—Å —Ä—É–¥—ã:
‚õì 1 –∂–µ–ª–µ–∑–æ - 230.000$
üåï 1 –∑–æ–ª–æ—Ç–æ - 1.000.000$
üíé 1 –∞–ª–º–∞–∑ - 116.000.000$
üéÜ 1 –∞–º–µ—Ç–∏—Å—Ç - 217.000.000$
üí† 1 –∞–∫–≤–∞–º–∞—Ä–∏–Ω - 461.000.000$
üçÄ 1 –∏–∑—É–º—Ä—É–¥ - 792.000.000$
üåå 1 –º–∞—Ç–µ—Ä–∏—è - 8.000.000.000$
üí• 1 –ø–ª–∞–∑–º–∞ - 12.000.000.000$
ü™ô 1 –Ω–∏–∫–µ–ª—å - 30.000.000.000$
‚öô 1 —Ç–∏—Ç–∞–Ω - 70.000.000.000.000$
üß™ 1 –∫–æ–±–∞–ª—å—Ç - 120.000.000.000.000$
‚òÑÔ∏è 1 —ç–∫—Ç–æ–ø–ª–∞–∑–º–∞ - 270.000.000.000.000$
‚öó 1 –ø–∞–ª–ª–∞–¥–∏–π - 2.000.000.000.000.000$''', parse_mode='html')


async def inventary_cmd(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    corn = await getcorn_garden(user_id)
    iron, gold, diamond, amestit, aquamarine, emeralds, matter, plasma, nickel, titanium, cobalt, ectoplasm = await getmine(
        message)
    resources = {
        "iron": {"name": "‚õì –ñ–µ–ª–µ–∑–æ", "quantity": iron},
        "gold": {"name": "üåï –ó–æ–ª–æ—Ç–æ", "quantity": gold},
        "diamond": {"name": "üíé –ê–ª–º–∞–∑", "quantity": diamond},
        "amethyst": {"name": "üéÜ –ê–º–µ—Ç–∏—Å—Ç", "quantity": amestit},
        "aquamarine": {"name": "üí† –ê–∫–≤–∞–º–∞—Ä–∏–Ω", "quantity": aquamarine},
        "emeralds": {"name": "üçÄ –ò–∑—É–º—Ä—É–¥", "quantity": emeralds},
        "matter": {"name": "üåå –ú–∞—Ç–µ—Ä–∏—è", "quantity": matter},
        "plasma": {"name": "üí• –ü–ª–∞–∑–º–∞", "quantity": plasma},
        "nickel": {"name": "ü™ô –ù–∏–∫–µ–ª—å", "quantity": nickel},
        "titanium": {"name": "‚öôÔ∏è –¢–∏—Ç–∞–Ω", "quantity": titanium},
        "cobalt": {"name": "üß™ –ö–æ–±–∞–ª—å—Ç", "quantity": cobalt},
        "ectoplasm": {"name": "‚òÑÔ∏è –≠–∫—Ç–æ–ø–ª–∞–∑–º–∞", "quantity": ectoplasm},
        "corn": {"name": "ü•ú –ó—ë—Ä–Ω–∞", "quantity": corn},
    }

    positive_resources = {name: info for name, info in resources.items() if info["quantity"] > 0}

    if positive_resources:
        result_message = "\n".join(
            [f'{info["name"]}: {info["quantity"]} —à—Ç.' for name, info in positive_resources.items()])
        await message.answer(f"{url},\n{result_message}", parse_mode='html')
    else:
        await message.answer(f"{url}, –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.", parse_mode='html')


async def mine_level(expe):
    if expe >= 10000000000:
        i = '–≠–∫—Ç–æ–ø–ª–∞–∑–º–∞ ‚òÑÔ∏è'
        i2 = 'SOON...'
        i3 = '???'
    elif expe >= 20000000:
        i = '–ö–æ–±–∞–ª—å üß™'
        i2 = '–≠–∫—Ç–æ–ø–ª–∞–∑–º–∞ ‚òÑÔ∏è'
        i3 = '10.000.000.000'
    elif expe >= 5000000:
        i = '–¢–∏—Ç–∞–Ω ‚öôÔ∏è'
        i2 = '–ö–æ–±–∞–ª—å üß™'
        i3 = '20.000.000'
    elif expe >= 950000:
        i = '–ù–∏–∫–µ–ª—å ü™ô'
        i2 = '–¢–∏—Ç–∞–Ω ‚öôÔ∏è'
        i3 = '5.000.000'
    elif expe >= 500000:
        i = '–ü–ª–∞–∑–º–∞ üí•'
        i2 = '–ù–∏–∫–µ–ª—å ü™ô'
        i3 = '950.000'
    elif expe >= 100000:
        i = '–ú–∞—Ç–µ—Ä–∏—è üåå'
        i2 = '–ü–ª–∞–∑–º–∞ üí•'
        i3 = '500.000'
    elif expe >= 60000:
        i = '–ò–∑—É–º—Ä—É–¥ üçÄ'
        i2 = '–ú–∞—Ç–µ—Ä–∏—è üåå'
        i3 = '100.000'
    elif expe >= 25000:
        i = '–ê–∫–≤–∞–º–∞—Ä–∏–Ω üí†'
        i2 = '–ò–∑—É–º—Ä—É–¥ üçÄ'
        i3 = '60.000'
    elif expe >= 10000:
        i = '–ê–º–µ—Ç–∏—Å—Ç üéÜ'
        i2 = '–ê–∫–≤–∞–º–∞—Ä–∏–Ω üí†'
        i3 = '25.000'
    elif expe >= 2000:
        i = '–ê–ª–º–∞–∑—ã üíé'
        i2 = '–ê–º–µ—Ç–∏—Å—Ç üéÜ '
        i3 = '10.000'
    elif expe >= 500:
        i = '–ó–æ–ª–æ—Ç–æ üåï'
        i2 = '–ê–ª–º–∞–∑—ã üíé'
        i3 = '2.000'
    else:
        i = '–ñ–µ–ª–µ–∑–æ ‚õì'
        i2 = '–ó–æ–ª–æ—Ç–æ üåï'
        i3 = '500'
    return i, i2, i3


async def mymine_cmd(message):
    await register_users(message)
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    expe, energy = await getexpe(message)
    mine_level_t, mine_level_s, tr = await mine_level(expe)
    await message.answer(f'''{url}, —ç—Ç–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å —à–∞—Ö—Ç—ã:
üèÜ –û–ø—ã—Ç: {expe}
‚ö° –≠–Ω–µ—Ä–≥–∏—è: {energy}
‚õè –í–∞—à —É—Ä–æ–≤–µ–Ω—å: {mine_level_t}
‚û° –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {mine_level_s}
‚≠êÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è {tr} –æ–ø—ã—Ç–∞''', parse_mode='html')


async def digmine(message):
    await register_users(message)
    user_name = await getname(message)
    ads = await getads(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    expe, energy = await getexpe(message)
    result = await win_luser()
    rwin, rloser = result
    if energy == 0:
        await message.answer(f'{url}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –∫–æ–ø–∫–∏ {rloser}', parse_mode='html')
        return
    txt = message.text.split()
    if len(txt) < 2:
        await message.answer(f'{url}, –¥–∞–Ω–Ω–æ–π —Ä—É–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç {rloser}', parse_mode='html',
                             disable_web_page_preview=True)
        return
    else:
        ruda = txt[1].lower()
    if ruda == '–∂–µ–ª–µ–∑–æ':
        i = random.randint(40, 69)
        op = 1
        await digdb(i, user_id, 'iron', op)
        await message.answer(f'{url}, +{i} –∂–µ–ª–µ–∑–æ.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–∑–æ–ª–æ—Ç–æ':
        if expe < 500:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∑–æ–ª–æ—Ç–æ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 500 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(4, 30)
        op = 3
        await digdb(i, user_id, 'gold', op)
        await message.answer(f'{url}, +{i} –∑–æ–ª–æ—Ç–æ.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–∞–ª–º–∞–∑—ã':
        if expe < 2000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∞–ª–º–∞–∑—ã –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 2.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(2, 10)
        op = 5
        await digdb(i, user_id, 'diamond', op)
        await message.answer(f'{url}, +{i} –∞–ª–º–∞–∑—ã.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–∞–º–µ—Ç–∏—Å—Ç—ã':
        if expe < 10000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∞–º–µ—Ç–∏—Å—Ç—ã –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 10.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 6)
        op = 15
        await digdb(i, user_id, 'amestit', op)
        await message.answer(f'{url}, +{i} –∞–º–µ—Ç–∏—Å—Ç—ã.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–∞–∫–≤–∞–º–∞—Ä–∏–Ω':
        if expe < 25000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∞–∫–≤–∞–º–∞—Ä–∏–Ω –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 25.000 –æ–ø—ã—Ç–∞ {rloser}',
                                 parse_mode='html')
            return
        i = random.randint(1, 5)
        op = 30
        await digdb(i, user_id, 'aquamarine', op)
        await message.answer(f'{url}, +{i} –∞–∫–≤–∞–º–∞—Ä–∏–Ω.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–∏–∑—É–º—Ä—É–¥—ã':
        if expe < 60000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∏–∑—É–º—Ä—É–¥—ã –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 60.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 3)
        op = 55
        await digdb(i, user_id, 'emeralds', op)
        await message.answer(f'{url}, +{i} –∏–∑—É–º—Ä—É–¥—ã.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–º–∞—Ç–µ—Ä–∏—é':
        if expe < 100000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –º–∞—Ç–µ—Ä–∏—é –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 100.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 2)
        op = 65
        await digdb(i, user_id, 'matter', op)
        await message.answer(f'{url}, +{i} –º–∞—Ç–µ—Ä–∏—é.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–ø–ª–∞–∑–º—É':
        if expe < 500000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –ø–ª–∞–∑–º—É –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 500.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 2)
        op = 180
        await digdb(i, user_id, 'plasma', op)
        await message.answer(f'{url}, +{i} –ø–ª–∞–∑–º—É.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–Ω–∏–∫–µ–ª—å':
        if expe < 950000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –Ω–∏–∫–µ–ª—å –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 950.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 2)
        op = 500
        await digdb(i, user_id, 'nickel', op)
        await message.answer(f'{url}, +{i} –Ω–∏–∫–µ–ª—å.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '—Ç–∏—Ç–∞–Ω':
        if expe < 5000000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å —Ç–∏—Ç–∞–Ω –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 5.000.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 2)
        op = 2300
        await digdb(i, user_id, 'titanium', op)
        await message.answer(f'{url}, +{i} —Ç–∏—Ç–∞–Ω.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '–∫–æ–±–∞–ª—å—Ç':
        if expe < 20000000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å –∫–æ–±–∞–ª—å—Ç –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 20.000.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 2)
        op = 3600
        await digdb(i, user_id, 'cobalt', op)
        await message.answer(f'{url}, +{i} –∫–æ–±–∞–ª—å—Ç.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    elif ruda == '—ç–∫—Ç–æ–ø–ª–∞–∑–º—É':
        if expe < 10000000000:
            await message.answer(f'{url}, —á—Ç–æ–±—ã –∫–æ–ø–∞—Ç—å —ç–∫—Ç–æ–ø–ª–∞–∑–º—É –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 10.000.000.000 –æ–ø—ã—Ç–∞ {rloser}', parse_mode='html')
            return
        i = random.randint(1, 2)
        op = 7200
        await digdb(i, user_id, 'ectoplasm', op)
        await message.answer(f'{url}, +{i} –∫–æ–±–∞–ª—å—Ç.\nüí° –≠–Ω–µ—Ä–≥–∏—è: {energy - 1}, –æ–ø—ã—Ç: {expe + op}\n\n{ads}',
                             parse_mode='html', disable_web_page_preview=True)
    else:
        await message.answer(f'{url}, –¥–∞–Ω–Ω–æ–π —Ä—É–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç {rloser}', parse_mode='html')
