from aiogram import types, Dispatcher
import commands.property.db as db
from commands.db import url_name
from commands.main import win_luser
from bot import bot
from assets.antispam import antispam
from commands.property.lists import *


@antispam
async def helicopters_list(message: types.Message):
    name = await url_name(message.from_user.id)
    await message.answer(f'''{name}, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã:
üöÅ 1. –í–æ–∑–¥—É—à–Ω—ã–π —à–∞—Ä - 100.000$
üöÅ 2. RotorWay Exec 162F - 3.500.000$
üöÅ 3. Robinson R44 - 10.000.000$
üöÅ 4. Hiller UH-12C - 30.000.000$
üöÅ 5. AW119 Koala - 63.400.000$
üöÅ 6. MBB BK 117 - 150.000.000$
üöÅ 7. Eurocopter EC130 - 350.000.000$
üöÅ 8. Leonardo AW109 Power - 750.000.000$
üöÅ 9. Sikorsky S-76 - 1.240.000.000$
üöÅ 10. Bell 429WLG - 8.890.000.000$
üöÅ 11. NHI NH90 - 88.330.000.000$
üöÅ 12. Kazan Mi-35M - 225.750.000.000$
üöÅ 13. Bell V-22 Osprey - 945.300.000.000$

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–µ—Ä—Ç–æ–ª—ë—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ "–ö—É–ø–∏—Ç—å –≤–µ—Ä—Ç–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]"''')


@antispam
async def my_helicopter(message: types.Message):
    name = await url_name(message.from_user.id)
    rwin, rloser = await win_luser()
    data = await db.get_property(message.from_user.id)
    if data[1] == 0:
        await message.answer(f'{name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç –≤–µ—Ä—Ç–æ–ª—ë—Ç–∞ {rloser}')
        return

    hdata = helicopters.get(data[1])

    txt = f'''{name}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –≤–µ—Ä—Ç–æ–ª—ë—Ç–µ "{hdata[0]}"
‚õΩÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {hdata[1]} –∫–º/—á
üêé –õ–æ—à–∞–¥–∏–Ω—ã—Ö —Å–∏–ª: {hdata[2]}'''

    await bot.send_photo(chat_id=message.chat.id, photo=hdata[3], caption=txt)


@antispam
async def my_phone(message: types.Message):
    name = await url_name(message.from_user.id)
    rwin, rloser = await win_luser()
    data = await db.get_property(message.from_user.id)
    if data[4] == 0:
        await message.answer(f'{name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {rloser}')
        return

    hdata = phones.get(data[4])
    await bot.send_photo(chat_id=message.chat.id, photo=hdata[1], caption=f'{name}, –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω "{hdata[0]}"')


@antispam
async def my_car(message: types.Message):
    name = await url_name(message.from_user.id)
    rwin, rloser = await win_luser()
    data = await db.get_property(message.from_user.id)
    if data[2] == 0:
        await message.answer(f'{name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è {rloser}')
        return

    hdata = cars.get(data[2])

    txt = f'''{name}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ "{hdata[0]}"
‚õΩÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {hdata[1]} –∫–º/—á
üêé –õ–æ—à–∞–¥–∏–Ω—ã—Ö —Å–∏–ª: {hdata[2]}
‚è± –†–∞–∑–≥–æ–Ω –¥–æ 100 –∑–∞ {hdata[3]} —Å–µ–∫'''

    await bot.send_photo(chat_id=message.chat.id, photo=hdata[4], caption=txt)


@antispam
async def my_house(message: types.Message):
    name = await url_name(message.from_user.id)
    rwin, rloser = await win_luser()
    data = await db.get_property(message.from_user.id)
    if data[5] == 0:
        await message.answer(f'{name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç —Å–≤–æ–µ–≥–æ –¥–æ–º–∞ {rloser}')
        return

    hdata = house.get(data[5])
    await bot.send_photo(chat_id=message.chat.id, photo=hdata[1], caption=f'{name}, –≤–∞—à –¥–æ–º "{hdata[0]}"')


@antispam
async def my_yahta(message: types.Message):
    name = await url_name(message.from_user.id)
    rwin, rloser = await win_luser()
    data = await db.get_property(message.from_user.id)
    if data[3] == 0:
        await message.answer(f'{name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç —Å–≤–æ–µ–π —è—Ö—Ç—ã {rloser}')
        return

    hdata = yahts.get(data[3])

    txt = f'''{name}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π —è—Ö—Ç–µ "{hdata[0]}"
‚õΩÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {hdata[1]} –∫–º/—á
üêé –õ–æ—à–∞–¥–∏–Ω—ã—Ö —Å–∏–ª: {hdata[2]}'''

    await bot.send_photo(chat_id=message.chat.id, photo=hdata[3], caption=txt)


@antispam
async def my_plane(message: types.Message):
    name = await url_name(message.from_user.id)
    rwin, rloser = await win_luser()
    data = await db.get_property(message.from_user.id)
    if data[6] == 0:
        await message.answer(f'{name}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç —Å–≤–æ–µ–≥–æ —Å–∞–º–æ–ª—ë—Ç–∞ {rloser}')
        return

    hdata = planes.get(data[6])

    txt = f'''{name}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º —Å–∞–º–æ–ª—ë—Ç–µ "{hdata[0]}"
‚õΩÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å: {hdata[1]} –∫–º/—á
üêé –õ–æ—à–∞–¥–∏–Ω—ã—Ö —Å–∏–ª: {hdata[2]}'''

    await bot.send_photo(chat_id=message.chat.id, photo=hdata[3], caption=txt)


def reg(dp: Dispatcher):
    dp.register_message_handler(helicopters_list, lambda message: message.text.lower().startswith(('–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã', '–≤–µ—Ä—Ç–æ–ª—ë—Ç—ã')))
    dp.register_message_handler(cars_list, lambda message: message.text.lower().startswith('–º–∞—à–∏–Ω—ã'))
    dp.register_message_handler(yahta_list, lambda message: message.text.lower().startswith('–¥–æ–º–∞'))
    dp.register_message_handler(phone_list, lambda message: message.text.lower().startswith('—Ç–µ–ª–µ—Ñ–æ–Ω—ã'))
    dp.register_message_handler(plane_list, lambda message: message.text.lower().startswith(('—Å–∞–º–æ–ª–µ—Ç—ã', '—Å–∞–º–æ–ª—ë—Ç—ã')))

    dp.register_message_handler(my_helicopter, lambda message: message.text.lower().startswith(('–º–æ–π –≤–µ—Ä—Ç–æ–ª–µ—Ç', '–º–æ–π –≤–µ—Ä—Ç–æ–ª—ë—Ç')))
    dp.register_message_handler(my_phone, lambda message: message.text.lower().startswith('–º–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω'))
    dp.register_message_handler(my_car, lambda message: message.text.lower().startswith('–º–æ—è –º–∞—à–∏–Ω–∞'))
    dp.register_message_handler(my_house, lambda message: message.text.lower().startswith('–º–æ–π –¥–æ–º'))
    dp.register_message_handler(my_yahta, lambda message: message.text.lower().startswith('–º–æ—è —è—Ö—Ç–∞'))
    dp.register_message_handler(my_plane, lambda message: message.text.lower().startswith(('–º–æ–π —Å–∞–º–æ–ª–µ—Ç', '–º–æ–π —Å–∞–º–æ–ª—ë—Ç')))
