from aiogram import types
from commands.db import getperevod, getlimitdb, getstatus, url_name, get_balance, get_doplimit
from commands.main import win_luser
from commands.admin.loger import new_log
from assets.antispam import antispam
from decimal import Decimal


async def get_limit_cmd(status):
    if status == 1:
        limit = 300000000000000
    elif status == 2:
        limit = 750000000000000
    elif status == 3:
        limit = 1000000000000000
    elif status == 4:
        limit = 30000000000000000
    else:
        limit = 150000000000000
    return limit


@antispam
async def dat_cmd(message: types.Message):
    user_id = message.from_user.id
    rwin, rloser = await win_luser()
    balance = await get_balance(user_id)
    per = await getlimitdb(message)
    url = await url_name(user_id)
    status = await getstatus(user_id)
    limit = await get_limit_cmd(status)
    doplimit = await get_doplimit(user_id)

    try:
        reply_user_id = message.reply_to_message.from_user.id
        url2 = await url_name(reply_user_id)
    except:
        await message.reply(f'{url}, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {rloser}')
        return

    if user_id == reply_user_id:
        return

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
        summ2 = '{:,}'.format(summ).replace(',', '.')
    except:
        await message.reply(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∏–≥—Ä–æ–∫—É {rloser}')
        return

    limit = Decimal(str(limit)) + Decimal(doplimit)
    d_per = Decimal(per) + Decimal(str(summ))

    if d_per > limit:
        await message.reply(f'{url}, –≤—ã —É–∂–µ –∏—Å—á–µ—Ä–ø–∞–ª–∏ —Å–≤–æ–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –ø–µ—Ä–µ–¥–∞—á–∏ –¥–µ–Ω–µ–≥')
        return

    if summ > 0:
        if int(balance) >= summ:
            await message.answer(f'–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ {summ2}$ –∏–≥—Ä–æ–∫—É {url2} {rwin}')
            await getperevod(summ, user_id, reply_user_id)
            await new_log(f'#–ø–µ—Ä–µ–≤–æ–¥\n{user_id}\n –ò–º—è: {name}\n–°—É–º–º–∞: {summ2}\n–ü–µ—Ä–µ–¥–∞–ª: {reply_user_id}', 'money_transfers')
        else:
            await message.reply(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {rloser}')

    else:
        await message.reply(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫—É {rloser}')


@antispam
async def limit_cmd(message):
    user_id = message.from_user.id
    per = await getlimitdb(message)
    url = await url_name(user_id)
    status = await getstatus(user_id)
    limit = await get_limit_cmd(status)
    doplimit = await get_doplimit(user_id)

    limit = int(limit) + int(doplimit)
    per = int(per)
    ost = limit - per

    youlimit = '{:,}'.format(limit).replace(',', '.')
    ost = '{:,}'.format(ost).replace(',', '.')
    per2 = '{:,}'.format(per).replace(',', '.')

    await message.reply(f'''{url}, –∑–¥–µ—Å—å –≤–∞—à –ª–∏–º–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {youlimit}$
üí´ –í—ã —É–∂–µ –ø–µ—Ä–µ–¥–∞–ª–∏: {per2}$
üöÄ –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å: {ost}$ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏!''')
